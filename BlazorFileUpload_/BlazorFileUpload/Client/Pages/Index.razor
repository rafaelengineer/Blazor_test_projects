@page "/"
@using Microsoft.AspNetCore.Components.Forms
@using BlazorFileUpload.Shared
@inject HttpClient Http


<PageTitle>Upload Files</PageTitle>

<h1>Upload Files</h1>

<h3>Response = @resposta</h3>

<InputFile OnChange="@OnInputFileChange" multiple />

@if(fileNames.Count > 0)
{
    <ul>
        @foreach(var fileName in fileNames)
        {
            <li>
                File: @fileName
                <br>
                <span>
                    Stored File Name: @GetStoredFileName(fileName)
                    </span>
                </li>
        }
        </ul>
}

@code{
    private int maxAllowedFiles = int.MaxValue;
    private long maxFileSize = long.MaxValue;
    private List<string> fileNames = new();
    private List<UploadResult> uploadResults = new();
    private string resposta = "no response yet!";

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        using var content = new MultipartFormDataContent();
        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            fileNames.Add(file.Name);

            content.Add(
                content: fileContent,
                name:"\"files\"",
                fileName:file.Name);
        }
        resposta = "Antes de tentar";
        var response = await Http.PostAsync("/api/File", content);
        resposta = response.Content.ReadAsStringAsync().Result;
        var newUploadReults = await response.Content.ReadFromJsonAsync<List<UploadResult>>();

        if(newUploadReults is not null)
        {
            uploadResults = uploadResults.Concat(newUploadReults).ToList();
        }
    }
    private string? GetStoredFileName(string fileName)
    {
        var uploadResult = uploadResults.SingleOrDefault(f => f.FileName == fileName);
        if(uploadResult is not null)
            return uploadResult.StoredFileName;

        return "File not found.";
    }
}